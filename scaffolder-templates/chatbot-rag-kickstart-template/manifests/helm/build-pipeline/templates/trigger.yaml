{{- if .Values.pipeline.triggers.enabled }}
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: {{ .Values.global.appName }}-event-listener
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  serviceAccountName: {{ .Values.pipeline.serviceAccount }}
  triggers:
    {{- if .Values.webhook.gitlab.enabled }}
    - name: gitlab-push-trigger
      interceptors:
        - ref:
            name: "gitlab"
          params:
            - name: "secretRef"
              value:
                secretName: {{ .Values.pipeline.triggers.gitlab.secretName }}
                secretKey: "secretToken"
            - name: "eventTypes"
              value: ["Push Hook"]
      bindings:
        - ref: gitlab-push-binding
      template:
        ref: rag-pipeline-template
    {{- end }}
    {{- if .Values.webhook.github.enabled }}
    - name: github-push-trigger
      interceptors:
        - ref:
            name: "github"
          params:
            - name: "secretRef"
              value:
                secretName: {{ .Values.pipeline.triggers.github.secretName }}
                secretKey: "secretToken"
            - name: "eventTypes"
              value: ["push"]
      bindings:
        - ref: github-push-binding
      template:
        ref: rag-pipeline-template
    {{- end }}
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: gitlab-push-binding
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  params:
    - name: source-repo-url
      value: $(body.repository.git_http_url)
    - name: gitops-repo-url
      value: {{ .Values.pipeline.gitopsRepo.url }}
    - name: image-name
      value: {{ .Values.pipeline.image.fullName | default .Values.pipeline.image.name }}
    - name: image-tag
      value: $(body.after[0:8])
    - name: app-name
      value: {{ .Values.global.appName }}
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-push-binding
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  params:
    - name: source-repo-url
      value: $(body.repository.clone_url)
    - name: gitops-repo-url
      value: {{ .Values.pipeline.gitopsRepo.url }}
    - name: image-name
      value: {{ .Values.pipeline.image.fullName | default .Values.pipeline.image.name }}
    - name: image-tag
      value: $(body.after[0:8])
    - name: app-name
      value: {{ .Values.global.appName }}
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: rag-pipeline-template
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  params:
    - name: source-repo-url
      description: The git repository URL
    - name: gitops-repo-url
      description: The GitOps repository URL
    - name: image-name
      description: The name of the image to build
    - name: image-tag
      description: The tag of the image to build
    - name: app-name
      description: The application name
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: $(tt.params.app-name)-build-
        namespace: {{ .Values.pipeline.namespace }}-build
      spec:
        serviceAccountName: {{ .Values.pipeline.serviceAccount }}
        pipelineRef:
          name: {{ .Values.pipeline.name }}
        params:
          - name: source-repo-url
            value: $(tt.params.source-repo-url)
          - name: gitops-repo-url
            value: $(tt.params.gitops-repo-url)
          - name: image-name
            value: $(tt.params.image-name)
          - name: image-tag
            value: $(tt.params.image-tag)
          - name: app-name
            value: $(tt.params.app-name)
        workspaces:
          - name: shared-data
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 5Gi
          - name: git-credentials
            secret:
              secretName: git-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.appName }}-webhook-service
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  selector:
    app.kubernetes.io/managed-by: EventListener
    app.kubernetes.io/part-of: Triggers
    eventlistener: {{ .Values.global.appName }}-event-listener
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ .Values.global.appName }}-webhook-route
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  to:
    kind: Service
    name: {{ .Values.global.appName }}-webhook-service
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
{{- end }} 