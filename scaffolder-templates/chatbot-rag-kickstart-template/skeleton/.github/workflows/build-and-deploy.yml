name: Build and Deploy RAG Chatbot

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Trigger GitOps Update
      if: github.ref == 'refs/heads/main'
      run: |
        # Extract short SHA for image tag
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
        
        # Call webhook to trigger GitOps pipeline update
        curl -X POST "${{ secrets.GITOPS_WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -H "X-GitHub-Event: push" \
          -d '{
            "repository": {
              "clone_url": "${{ github.server_url }}/${{ github.repository }}.git"
            },
            "after": "${{ github.sha }}"
          }'
      env:
        GITOPS_WEBHOOK_URL: ${{ secrets.GITOPS_WEBHOOK_URL }} 