apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Values.pipeline.name }}
  namespace: {{ .Values.pipeline.namespace }}-build
spec:
  params:
    - name: source-repo-url
      type: string
      description: The git repository URL to clone from
    - name: gitops-repo-url
      type: string
      description: The GitOps repository URL to update
    - name: image-name
      type: string
      description: The name of the image to build
    - name: image-tag
      type: string
      description: The tag of the image to build
      default: latest
    - name: app-name
      type: string
      description: The application name
  workspaces:
    - name: shared-data
      description: Workspace for sharing data between tasks
    - name: git-credentials
      description: Git credentials
  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-data
        - name: ssh-directory
          workspace: git-credentials
      params:
        - name: url
          value: $(params.source-repo-url)
        - name: deleteExisting
          value: "true"
    
    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - fetch-source
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: IMAGE
          value: "{{ .Values.pipeline.image.registry }}/{{ .Values.pipeline.namespace }}/$(params.image-name):$(params.image-tag)"
        - name: DOCKERFILE
          value: "{{ .Values.buildConfig.dockerfilePath }}"
        - name: CONTEXT
          value: "."
    
    - name: update-gitops
      taskRef:
        name: git-cli
        kind: ClusterTask
      runAfter:
        - build-image
      workspaces:
        - name: source
          workspace: shared-data
        - name: ssh-directory
          workspace: git-credentials
      params:
        - name: GIT_USER_NAME
          value: "Pipeline Bot"
        - name: GIT_USER_EMAIL
          value: "pipeline@example.com"
        - name: GIT_SCRIPT
          value: |
            # Clone GitOps repo
            git clone $(params.gitops-repo-url) gitops-repo
            cd gitops-repo
            
            # Update the image tag in values.yaml
            sed -i "s|tag:.*|tag: \"$(params.image-tag)\"|g" {{ .Values.pipeline.gitopsRepo.helmPath }}/values.yaml
            
            # Commit and push changes
            git add -A
            git commit -m "Update $(params.app-name) image to $(params.image-tag)"
            git push origin {{ .Values.pipeline.gitopsRepo.branch }} 