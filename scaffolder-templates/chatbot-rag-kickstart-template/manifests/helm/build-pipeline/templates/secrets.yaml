{{- if .Values.pipeline.triggers.enabled }}
{{- $webhookSecret := randAlphaNum 40 | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.pipeline.triggers.gitlab.secretName }}
  namespace: {{ .Values.pipeline.namespace }}-build
  annotations:
    demo.rhdh/auto-generated: "true"
    demo.rhdh/description: "Auto-generated webhook secret for GitLab integration"
type: Opaque
data:
  secretToken: {{ $webhookSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.pipeline.triggers.github.secretName }}
  namespace: {{ .Values.pipeline.namespace }}-build
  annotations:
    demo.rhdh/auto-generated: "true"
    demo.rhdh/description: "Auto-generated webhook secret for GitHub integration"
type: Opaque
data:
  secretToken: {{ $webhookSecret }}
---
# ConfigMap to store the webhook secret for easy demo access
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.global.appName }}-demo-config
  namespace: {{ .Values.pipeline.namespace }}-build
  annotations:
    demo.rhdh/auto-generated: "true"
data:
  webhook-secret: {{ randAlphaNum 40 | quote }}
  webhook-url: "https://{{ .Values.global.appName }}-webhook-route-{{ .Values.pipeline.namespace }}-build.apps.CLUSTER_DOMAIN"
  setup-instructions: |
    === DEMO SETUP INSTRUCTIONS ===
    
    This configuration has been auto-generated for demo purposes.
    
    ðŸ”‘ Webhook Secret (for both GitHub/GitLab): {{ randAlphaNum 40 }}
    
    ðŸ“¡ Webhook URL: https://{{ .Values.global.appName }}-webhook-route-{{ .Values.pipeline.namespace }}-build.apps.CLUSTER_DOMAIN
    
    ðŸ”§ GitHub Setup:
    1. Go to your repository Settings > Webhooks
    2. Add webhook with URL above and secret above
    3. Select "Just the push event"
    
    ðŸ”§ GitLab Setup:
    1. Go to your repository Settings > Webhooks  
    2. Add webhook with URL above and secret above
    3. Select "Push events"
    
    âœ… No additional secrets needed - uses platform defaults!
{{- end }}
---
{{- if .Values.secrets.gitCredentials.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: git-credentials
  namespace: {{ .Values.pipeline.namespace }}-build
type: kubernetes.io/ssh-auth
data:
  ssh-privatekey: {{ .Values.secrets.gitCredentials.sshPrivateKey | b64enc }}
  known_hosts: {{ .Values.secrets.gitCredentials.knownHosts | b64enc }}
{{- end }}
---
{{- if .Values.secrets.containerRegistry.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: container-registry-credentials
  namespace: {{ .Values.pipeline.namespace }}-build
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"auth\":\"%s\"}}}" .Values.secrets.containerRegistry.server .Values.secrets.containerRegistry.username .Values.secrets.containerRegistry.password (printf "%s:%s" .Values.secrets.containerRegistry.username .Values.secrets.containerRegistry.password | b64enc) | b64enc }}
{{- end }} 